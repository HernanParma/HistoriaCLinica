// <auto-generated />
using System;
using HistoriaClinica.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HistoriaClinica.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HistoriaClinica.Models.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArchivosJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("B12")
                        .HasColumnType("float");

                    b.Property<double?>("COL")
                        .HasColumnType("float");

                    b.Property<double?>("CR")
                        .HasColumnType("float");

                    b.Property<double?>("CT")
                        .HasColumnType("float");

                    b.Property<double?>("FAL")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double?>("GB")
                        .HasColumnType("float");

                    b.Property<double?>("GLUC")
                        .HasColumnType("float");

                    b.Property<double?>("GOT")
                        .HasColumnType("float");

                    b.Property<double?>("GPT")
                        .HasColumnType("float");

                    b.Property<double?>("GR")
                        .HasColumnType("float");

                    b.Property<double?>("HB")
                        .HasColumnType("float");

                    b.Property<double?>("HTO")
                        .HasColumnType("float");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ORINA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PLAQ")
                        .HasColumnType("float");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("Recetar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TG")
                        .HasColumnType("float");

                    b.Property<double?>("TSH")
                        .HasColumnType("float");

                    b.Property<double?>("UREA")
                        .HasColumnType("float");

                    b.Property<double?>("URICO")
                        .HasColumnType("float");

                    b.Property<double?>("VITD")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("HistoriaClinica.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Altura")
                        .HasColumnType("int");

                    b.Property<string>("Antecedentes")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Medicacion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroAfiliado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObraSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Particular")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Peso")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("HistoriaClinica.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoVerificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContrasenaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verificado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("HistoriaClinica.Models.Consulta", b =>
                {
                    b.HasOne("HistoriaClinica.Models.Paciente", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HistoriaClinica.Models.Paciente", b =>
                {
                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
